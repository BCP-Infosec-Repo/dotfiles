{
    // Place your snippets for csharp here. Each snippet is defined under a snippet name and has a prefix, body and
    // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
    // same ids are connected.
    // Example:
    // "Print to console": {
    // 	"prefix": "log",
    // 	"body": [
    // 		"console.log('$1');",
    // 		"$2"
    // 	],
    // 	"description": "Log output to console"
    // }
    "Equatable Struct": {
        "prefix": "iequatable-struct",
        "body": [
            "internal readonly struct ${1:StructName} : IEquatable<$1>",
            "{",
            "    public readonly int FieldName;",
            "",
            "    public $1(int fieldName)",
            "    {",
            "        FieldName = fieldName;",
            "    }",
            "",
            "    public static bool operator ==($1 first, $1 second)",
            "        => first.Equals(second);",
            "",
            "    public static bool operator !=($1 first, $1 seoncd)",
            "        => !first.Equals(second);",
            "",
            "    public bool Equals($1 other)",
            "        => FieldName == other.FieldName;",
            "",
            "    public override bool Equals(object obj)",
            "        => obj is $1 other && Equals(other);",
            "",
            "    public override int GetHashCode()",
            "    {",
            "        unchecked",
            "        {",
            "            int hash = 17;",
            "            hash = hash * 23 + FieldName.GetHashCode();",
            "            return hash;",
            "        }",
            "    }",
            "}",
        ]
    },
    "GetHashCode Implementation": {
        "prefix": "gethashcode-impl",
        "body": [
            "public override int GetHashCode()",
            "{",
            "    unchecked",
            "    {",
            "        int hash = 17;",
            "        hash = hash * 23 + ${1:FieldName}.GetHashCode();$0",
            "        return hash;",
            "    }",
            "}",
        ]
    },
}
